---
title: "Hands-on Exercise 2"
author: "Vivian Fan Jing"
Excute:
  Warning: False
---

# 2.1 Overview

In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:

control the placement of annotation on a graph by using functions provided in ggrepel package, create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages, plot composite figure by combining ggplot2 graphs by using patchwork package.

# 2.2 Getting started

## 2.2.1 Installing and loading the required libraries

Code chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.

```{r}
pacman::p_load(ggrepel,patchwork, ggthemes, hrbrthemes, tidyverse)
```

## 2.2.2 Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# 2.3 Beyond ggplot2 Annotation: ggrepel

ggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text.

## 2.3.1 Working with ggrepel

```{r}
ggplot(data = exam_data, 
       aes(x = MATHS, y = ENGLISH)) +        geom_point() + 
 geom_smooth(method=lm, size=0.5) +   geom_label_repel(aes(label = ID), 
fontface = "bold") + coord_cartesian(xlim=c(0,100), 
                                     ylim=c(0,100)) + 
ggtitle("English scores versus Maths scores for Primary 3")
```

# 2.4 Beyond ggplot2 Themes

ggplot2 comes with eight built-in themes, they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().

```{r}
ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  theme_gray() + 
  ggtitle("Distribution of Maths scores")
```

## 2.4.1 Working with ggtheme package

ggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.

In the example below, The Economist theme is used.

```{r}
library(ggthemes)

ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```

## 2.4.2 Working with hrbthems package

hrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

```{r}
library(ggplot2)
library(hrbrthemes)

ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  theme_ipsum(base_family = "sans") +
  ggtitle("Distribution of Maths scores") 
```

# 2.5 Beyond Single Graph

It is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, you will learn how to create composite plot by combining multiple graphs. First, let us create three statistical graphics by using the code chunk below.

```{r}
ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores") 
```

Next

```{r}
ggplot(data = exam_data, 
       aes(x = ENGLISH)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores") 
```

Lastly, we will draw a scatterplot for English score versus Maths score by as shown below

```{r}
ggplot(data = exam_data, 
       aes(x = MATHS, y = ENGLISH)) + 
  geom_point() +
  geom_smooth(method=lm, size=0.5) + 
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## 2.5.1 Creating Composite Graphics: pathwork methods

There are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.

Patchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:

Two-Column Layout using the Plus Sign +. Parenthesis () to create a subplot group. Two-Row Layout using the Division Sign /

## 2.5.2 Combining two ggplot2 graphs

Figure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!

```{r}
library(ggplot2)
library(patchwork)

hist1 <- ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores") 

hist2 <- ggplot(data = exam_data, 
       aes(x = ENGLISH)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores") 

composite_plot <- hist1 + hist2
print(composite_plot)

```

## 2.5.3 Combining three ggplot2 graphs

We can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:

“/” operator to stack two ggplot2 graphs, “\|” operator to place the plots beside each other, “()” operator the define the sequence of the plotting.

```{r}
library(ggplot2)
library(patchwork)

hist1 <- ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores") 

hist2 <- ggplot(data = exam_data, 
       aes(x = ENGLISH)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores") 

hist3 <- ggplot(data = exam_data, 
       aes(x = MATHS, y = ENGLISH)) + 
  geom_point() +
  geom_smooth(method=lm, size=0.5) + 
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

composite_plot <- (hist1 / hist2) | hist3
print(composite_plot)
```

## 2.5.4 Creating a composite figure with tag

In order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.

```{r}
hist1 <- ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores") 

hist2 <- ggplot(data = exam_data, 
       aes(x = ENGLISH)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores") 

hist3 <- ggplot(data = exam_data, 
       aes(x = MATHS, y = ENGLISH)) + 
  geom_point() +
  geom_smooth(method=lm, size=0.5) + 
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

composite_plot <- (hist1 / hist2) | hist3 +

plot_annotation(tag_levels = 'I')
print(composite_plot)
```

## 2.5.5 Creating figure with insert

Beside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.

```{r}
hist3 <- ggplot(data = exam_data, 
       aes(x = MATHS, y = ENGLISH)) + 
  geom_point() +
  geom_smooth(method=lm, size=0.5) + 
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

hist2 <- ggplot(data = exam_data, 
       aes(x = ENGLISH)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores") 


hist3 + inset_element(hist2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)

```

## 2.5.6 Creating a composite figure by using patchwork and ggtheme

```{r}
hist1 <- ggplot(data = exam_data, 
       aes(x = MATHS)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores") 

hist2 <- ggplot(data = exam_data, 
       aes(x = ENGLISH)) + 
  geom_histogram(bins=20,
                 boundary = 100,
                 color="grey25",
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores") 

hist3 <- ggplot(data = exam_data, 
       aes(x = MATHS, y = ENGLISH)) + 
  geom_point() +
  geom_smooth(method=lm, size=0.5) + 
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
  
patchwork <- (hist1 / hist2) | hist3
patchwork & theme_economist()
```
